ext {

    appName = "Eria"

    minSdkVersion = 23
    targetSdkVersion = 30
    buildToolsVersion = "30.0.2"

    //Support Version
    supportLibVersion = "28.0.0"

    //AndroidX Version
    androidXVersion = "1.2.0"
    androidXCardViewVersion = "1.0.0"
    androidXRecyclerVersion = "1.1.0"
    androidXConstraintVersion = "1.1.3"
    androidXCoreVersion = "1.3.0"

    //Dimension Support
    sdpVersion = "1.0.5"

    //Networking
    retrofitVersion = "2.9.0"
    okHttpVersion = "4.7.2"
    moshiVersion = "1.9.2"
    coroutineAdapterVersion = "0.9.2"
    gsonVersion = "2.8.2"

    //Animation
    reboundVersion = "0.3.8"

    //Image Loading
    glideVersion = "4.11.0"

    //Image Picker
    imagePickerVersion = "1.7.1"

    //Custom Views
    circularImageView = "3.1.0"

    //Dagger
    daggerVersion = "2.25.4"

    //ViewPagerIndicator
    dotsIndicatorVersion = "4.1.2"

    //Firebase
    firebaseAnalyticsVersion = "17.5.0"
    firebaseCrashlytcisVersion = "17.2.1"

    //GoogleMap
    googleMapVersion = "17.0.0"
    googlePlayVersion = "17.1.0"
    googlePlaceVersion = "2.4.0"
    mapUtilsVersion = "2.0.3"

    //Coroutines
    coroutineVersion = "1.3.9"

    //LifeCycle
    lifecycleVersion = "2.2.0"

    //Kotlin KTX
    ktxVersion = "1.3.2"

    //Room
    room_version = "2.2.6"

    //Kotlin Dependencies
    kotlinDependencies = [
            ktx: "androidx.core:core-ktx:${ktxVersion}"
    ]

    //Support Libraries dependencies
    supportDependencies = [
            material        : "com.google.android.material:material:${androidXVersion}",
            recyclerView    : "androidx.recyclerview:recyclerview:${androidXRecyclerVersion}",
            cardView        : "androidx.cardview:cardview:${androidXCardViewVersion}",
            appCompat       : "androidx.appcompat:appcompat:${androidXVersion}",
            constraintLayout: "androidx.constraintlayout:constraintlayout:${androidXConstraintVersion}",
            annotations     : "com.android.support:support-annotations:${supportLibVersion}",
            core            : "androidx.core:core:${androidXCoreVersion}",
            fragment        : "androidx.fragment:fragment:${androidXVersion}",
            collection      : "androidx.collection:collection:${androidXRecyclerVersion}"
    ]

    //Dimension Libraries dependencies
    dimensionDependencies = [
            sdp: "com.intuit.sdp:sdp-android:${sdpVersion}",
            ssp: "com.intuit.ssp:ssp-android:${sdpVersion}"
    ]

    //Animation Libraries dependencies
    animDependencies = [
            rebound: "com.facebook.rebound:rebound:${reboundVersion}"
    ]

    //Image Loader Libraries dependencies
    imageLoaderDependencies = [
            glide        : "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler: "com.github.bumptech.glide:compiler:${glideVersion}"
    ]

    //Image Picker Libraries Dependencies
    imagePickerDependencies = [
            imagePicker: "com.github.dhaval2404:imagepicker-support:${imagePickerVersion}"
    ]

    //Custom View Libraries Dependencies
    customViewDependencies = [
            circularImageView: "de.hdodenhof:circleimageview:${circularImageView}"
    ]

    //Network Libraries dependencies
    networkDependencies = [
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGSON      : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitRXJava    : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogging     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            moshiConverter    : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            moshiKotlin       : "com.squareup.moshi:moshi-kotlin:${moshiVersion}",
            moshiKotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:${moshiVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            scalarsConverter  : "com.squareup.retrofit2:converter-scalars:${retrofitVersion}"
    ]

    //Network Libraries dependencies
    roomDatabaseDependency = [
            room_runtime      : "androidx.room:room-runtime:${room_version}",
            kapt_room_compiler: "androidx.room:room-compiler:${room_version}",
            // optional - Kotlin Extensions and Coroutines support for Room
            kapt_room         : "androidx.room:room-ktx:${room_version}",
            // optional - Test helpers
            room_test         : "androidx.room:room-testing:${room_version}"
    ]

    //Dependency Injector Libraries dependencies
    diDependencies = [
            dagger         : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroid  : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
            daggerSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}"
    ]

    //ViewPager Libraries dependencies
    pagerDependencies = [
            pagerIndicator: "com.tbuonomo.andrui:viewpagerdotsindicator:${dotsIndicatorVersion}"
    ]

    //Firebase Libraries dependencies
    firebaseDependencies = [
            analytics     : "com.google.firebase:firebase-analytics-ktx:${firebaseAnalyticsVersion}",
            crashlytics   : "com.google.firebase:firebase-crashlytics-ktx:${firebaseCrashlytcisVersion}",
            analyticsKtx  : "com.google.firebase:firebase-analytics-ktx",
            crashlyticsKtx: "com.google.firebase:firebase-crashlytics-ktx",
            fcmKtx        : "com.google.firebase:firebase-messaging-ktx"
    ]

    //Google Map Libraries dependencies
    mapDependencies = [
            googleMap     : "com.google.android.gms:play-services-maps:${googleMapVersion}",
            googleLocation: "com.google.android.gms:play-services-location:${googleMapVersion}",
            /*googlePlayLocation: "com.google.android.gms:play-services-location:${googlePlayVersion}",*/
            googlePlaces  : "com.google.android.libraries.places:places:${googlePlaceVersion}",
            mapUtils      : "com.google.maps.android:android-maps-utils:${mapUtilsVersion}"
    ]

    //Coroutine Libraries dependencies
    coroutineDependencies = [
            coroutineAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutineVersion}",
            coroutineCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutineVersion}",
            coroutineAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${coroutineAdapterVersion}"
    ]

    //Lifecycle Libraries dependencies
    lifeCycleDependencies = [
            lifeCycleExt      : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
            lifeCycleCompiler : "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}",
            lifeCycleLiveData : "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}",
            lifeCycleViewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}"
    ]
}